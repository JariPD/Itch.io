

let themeLoop = {
	'System':'Dark',
	'Dark':'Light',
	'Light':'System'
}
let decrease = {
	512:384,
	384:256,
	256:192,
	192:128,
	128:128
}
let increase = {
	512:512,
	384:512,
	256:384,
	192:256,
	128:192
}
function changeListThumbnailSize(stepChange){
	stepChange = Math.min(Math.max(parseInt(stepChange), -1), 1);
	
	if(stepChange > 0){
		var newThumbnailSize = increase[currentThumbnailSize];
	}else{
		var newThumbnailSize = decrease[currentThumbnailSize];
	}
	//alert(newThumbnailSize);
	newThumbnailSize = Math.min(Math.max(parseInt(newThumbnailSize), 128), 512);
	setCookie('thumbnailSize',newThumbnailSize,365);
	location.reload();
}
function cycleTheme(){
	setCookie('theme',themeLoop[currentTheme||'System'],365);
	location.reload();
}

function addTagToSearchInput(newTag){
	var tagArray = search.value.toLowerCase().split(/[\s,]/);
	var currentTag = tagArray.pop();
	search.value = search.value.substr(0, search.value.lastIndexOf(" "));
	search.value = search.value + " " + newTag + " ";
	selectSearchSuggestions(search.value);
}

function updateTags(inputArray,currentTag,show){
	suggestions.innerHTML = "";
	if(show){
		var i = 0;
		inputArray.filter(word => word != "").splice(0,59).forEach(
			element => { 
				var button = document.createElement('P');  
				var text = document.createTextNode(element.charAt(0).toUpperCase() + element.slice(1));  
				button.appendChild(text); 
				suggestions.appendChild(button);
				}
		);
		masterTags.filter(word => word.startsWith(currentTag) && !inputArray.includes(word) && word != "").splice(0,59).forEach(
			element => { 
				var button = document.createElement('BUTTON');  
				var text = document.createTextNode(element.charAt(0).toUpperCase() + element.slice(1));  
				button.appendChild(text); 
				button.onclick = function(){
					addTagToSearchInput(element);
				};
				suggestions.appendChild(button);
				}
		);
	}
}
function updateTagsAJAX(inputArray,currentTag,show){
	var xhttp = new XMLHttpRequest();
	xhttp.onreadystatechange = function() {
		if (this.readyState == 4 && this.status == 200) {
			masterTags = this.responseText.split(",");
			updateTags(inputArray,currentTag,show);
		}
	};
	var url = "./api/search-suggestions-data.php?"+window.location.search.replace("?","")+"&q="+inputArray.join(",");
	xhttp.open("GET", url, true);
	xhttp.send();
}
function selectSearchSuggestions(input){
	var tagArray = input.toLowerCase().split(/[\s,]/);
	var currentTag = tagArray.pop();
	if(input == ""){
		updateTagsAJAX(tagArray,currentTag,true);
		return;
	}
	if(!arraysEqual(passiveTags,tagArray)){
		updateTagsAJAX(tagArray,currentTag,true);
		passiveTags = [...tagArray];
	}else{
		updateTags(tagArray,currentTag,true);
	}				
}
function arraysEqual(a, b) {
	if (a === b) return true;
	if (a == null || b == null) return false;
	if (a.length !== b.length) return false;
	for (var i = 0; i < a.length; ++i) {
		if (a[i] !== b[i]) return false;
	}
	return true;
}

var masterTags = [];
var passiveTags = [];

var suggestions = document.getElementById("searchSuggestions");
var search = document.getElementById('searchInput');

if(search.value.match(/[a-zA-Z0-9]$/)){
	search.value = search.value + " ";
}
if(search.value == ""){
	updateTagsAJAX([],"",true);
} else{
	selectSearchSuggestions(search.value);
}
        
        